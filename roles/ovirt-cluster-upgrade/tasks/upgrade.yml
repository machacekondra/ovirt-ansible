---
- block:
  - name: Get list of VMs running on host {{ item.name }} in cluster {{ cluster_name }}
    ovirt_vms_facts:
      auth: "{{ ovirt_auth }}"
      pattern: "cluster={{ cluster_name }} and host={{ item.name }}"
    check_mode: no

  - name: Check if any VM is non migratable running on current host
    set_fact:
      pinned_vms_to_shutdown: "{{ ovirt_vms | selectattr('placement_policy.affinity', 'equalto', 'pinned') | map(attribute='name') | list }}"

  - name: Shutdown non-migratable VMs
    ovirt_vms:
      auth: "{{ ovirt_auth }}"
      state: stopped
      force: true
      name: "{{ vm_name }}"
    when: stop_non_migratable_vms
    with_items: "{{ pinned_vms_to_shutdown }}"
    loop_control:
      loop_var: vm_name

  - name: Fail if pinned VM to host and stop_non_migratable_vms is false
    fail:
      msg: "There are running pinned VMs on host {{ item.name }}, update host manully or check stop_non_migratable_vms variable."
    when: not stop_non_migratable_vms and pinned_vms_to_shutdown | length > 0

  - name: Append to VM list of VMs to be started
    set_fact:
      pinned_vms_down: "{{ pinned_vms_down }} + {{ pinned_vms_to_shutdown }}"
    when: stop_non_migratable_vms

  - name: Upgrade host
    ovirt_hosts:
      auth: "{{ ovirt_auth }}"
      name: "{{ item.name }}"
      state: upgraded
      check_upgrade: "{{ check_upgrade }}"
      timeout: "{{ upgrade_timeout }}"
    register: host_upgraded

  - name: Append host name to list of upgraded hosts
    set_fact:
      succeed_host_names: "{{ succeed_host_names }} + [ '{{ item.name }}' ]"
    when: host_upgraded.changed

  rescue:
    - name: Report issues
      fail:
        msg: "Upgrade of host '{{ item.name }}' failed :( ."
      ignore_errors: true

    - name: Append host name to list of failed hosts
      set_fact:
        failed_host_names: "{{ failed_host_names }} + [ '{{ item.name }}' ]"
